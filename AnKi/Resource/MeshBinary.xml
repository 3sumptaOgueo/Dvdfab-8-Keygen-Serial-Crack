<serializer>
	<includes>
		<include file="&lt;AnKi/Resource/Common.h&gt;"/>
		<include file="&lt;AnKi/Math.h&gt;"/>
		<include file="&lt;AnKi/Gr/Common.h&gt;"/>
	</includes>

	<doxygen_group name="resource"/>

	<prefix_code><![CDATA[
inline constexpr const char* kMeshMagic = "ANKIMES8";

enum class MeshBinaryFlag : U32
{
	kNone = 0,
	kConvex = 1 << 0,

	kAll = kConvex,
};
ANKI_ENUM_ALLOW_NUMERIC_OPERATIONS(MeshBinaryFlag)
]]></prefix_code>

	<classes>
		<class name="MeshBinaryVertexBuffer" comment="Vertex buffer info">
			<members>
				<member name="m_vertexStride" type="U32" comment="The size of the vertex. It's zero if the buffer is not present"/>
			</members>
		</class>

		<class name="MeshBinaryVertexAttribute" comment="Vertex attribute">
			<members>
				<member name="m_bufferIndex" type="U32"/>
				<member name="m_format" type="Format" comment="If the format is kNone then the attribute is not present"/>
				<member name="m_relativeOffset" type="U32"/>
				<member name="m_scale" type="F32" array_size="4" comment="Attribute is compressed and needs to be scaled"/>
				<member name="m_translation" type="F32" array_size="4" comment="Attribute is compressed and needs to be translated"/>
			</members>
		</class>

		<class name="MeshBinaryBoundingVolume" comment="Bounding volume info">
			<members>
				<member name="m_aabbMin" type="Vec3" comment="Bounding box min"/>
				<member name="m_aabbMax" type="Vec3" comment="Bounding box max"/>
				<member name="m_sphereCenter" type="Vec3" comment="Bounding sphere center"/>
				<member name="m_sphereRadius" type="F32" comment="Bounding sphere radius"/>
			</members>
		</class>

		<class name="MeshBinarySubMeshLod">
			<members>
				<member name="m_firstIndex" type="U32" comment="Offset in sizeof(indexType) to the global indices buffer of the LOD this belongs to"/>
				<member name="m_indexCount" type="U32"/>
				<member name="m_firstMeshlet" type="U32"/>
				<member name="m_meshletCount" type="U32"/>
			</members>
		</class>

		<class name="MeshBinaryHeader" comment="The 1st thing that appears in a mesh binary">
			<members>
				<member name="m_magic" type="U8" array_size="8"/>
				<member name="m_flags" type="MeshBinaryFlag"/>
				<member name="m_vertexBuffers" type="MeshBinaryVertexBuffer" array_size="U32(VertexAttributeSemantic::kCount)"/>
				<member name="m_vertexAttributes" type="MeshBinaryVertexAttribute" array_size="U32(VertexAttributeSemantic::kCount)"/>
				<member name="m_indexType" type="IndexType"/>
				<member name="m_padding" type="U8" array_size="3"/>
				<member name="m_meshletPrimitiveFormat" type="Format" comment="The format of the 3 indices that make a primitive"/>
				<member name="m_indexCounts" type="U32" array_size="kMaxLodCount"/>
				<member name="m_vertexCounts" type="U32" array_size="kMaxLodCount"/>
				<member name="m_meshletPrimitiveCounts" type="U32" array_size="kMaxLodCount"/>
				<member name="m_meshletCounts" type="U32" array_size="kMaxLodCount"/>
				<member name="m_subMeshCount" type="U32"/>
				<member name="m_lodCount" type="U32"/>
				<member name="m_maxPrimitivesPerMeshlet" type="U32"/>
				<member name="m_maxVerticesPerMeshlet" type="U32"/>
				<member name="m_boundingVolume" type="MeshBinaryBoundingVolume"/>
			</members>
		</class>

		<class name="MeshBinarySubMesh" comment="The 2nd thing that appears in a mesh binary">
			<members>
				<member name="m_lods" type="MeshBinarySubMeshLod" array_size="kMaxLodCount"/>
				<member name="m_boundingVolume" type="MeshBinaryBoundingVolume"/>
			</members>
		</class>

		<class name="MeshBinaryMeshlet" comment="The 3rd thing that appears in a mesh binary">
			<members>
				<member name="m_firstPrimitive" type="U32" comment="Index of the 1st primitive"/>
				<member name="m_primitiveCount" type="U32"/>
				<member name="m_firstVertex" type="U32" comment="Index of the first vertex"/>
				<member name="m_vertexCount" type="U32"/>
				<member name="m_boundingVolume" type="MeshBinaryBoundingVolume"/>
				<member name="m_coneApex" type="Vec3"/>
				<member name="m_coneDirection" type="Vec3"/>
				<member name="m_coneAngle" type="F32"/>
			</members>
		</class>
	</classes>
</serializer>
